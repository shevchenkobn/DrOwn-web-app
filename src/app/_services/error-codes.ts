import { HttpErrorResponse } from '@angular/common/http';

export enum ServerErrorCode {
  AUTH_NO = 'AUTH_NO',
  AUTH_ROLE = 'AUTH_ROLE',
  AUTH_BAD = 'AUTH_BAD',
  AUTH_EXPIRED = 'AUTH_EXPIRED',

  USER_ROLE_BAD = 'USER_ROLE_BAD',
  USER_FILTER_BAD = 'USER_FILTER_BAD',
  USER_EMAIL_DUPLICATE = 'USER_EMAIL_DUPLICATE',
  USER_ID_EMAIL = 'USER_EMAIL_AND_ID',
  USER_PASSWORD_NO = 'USER_PASSWORD_NO',
  USER_PASSWORD_SAVE_NO = 'USER_PASSWORD_SAVE_NO',
  USER_BLOCKED = 'USER_BLOCKED',
  USER_HAS_DRONES = 'USER_HAS_DRONES',

  DRONE_OWNER_NO = 'DRONE_OWNER_NO',
  DRONE_PRODUCER_NO = 'DRONE_PRODUCER_NO',
  DRONE_DEVICE_ID_BAD = 'DRONE_DEVICE_ID_BAD',
  DRONE_DEVICE_ID_PASSWORD = 'DRONE_DEVICE_ID_PASSWORD',
  DRONE_OWNER_BAD = 'DRONE_OWNER_BAD',
  DRONE_PRODUCER_BAD = 'DRONE_PRODUCER_BAD',
  DRONE_ID_DRONE_DEVICE = 'DRONE_ID_DRONE_DEVICE',
  DRONE_UNAUTHORIZED = 'DRONE_UNAUTHORIZED',
  DRONE_AUTHORIZED = 'DRONE_AUTHORIZED',
  DRONE_RENTED = 'DRONE_RENTED',

  DRONE_STATUS_BAD = 'DRONE_STATUS_BAD',

  DRONE_PRICE_DRONE_BAD = 'DRONE_PRICE_DRONE_BAD',

  TRANSACTION_PRICE_ID = 'TRANSACTION_PRICE_ID',
  TRANSACTION_PERIOD = 'TRANSACTION_PERIOD',
  TRANSACTION_CASH = 'TRANSACTION_CASH',
  TRANSACTION_USER_SAME = 'TRANSACTION_USER_SAME',
  TRANSACTION_STATUS_BAD = 'TRANSACTION_STATUS_BAD',

  DRONE_ORDER_ACTION_BAD = 'DRONE_ORDER_ACTION_BAD',

  SELECT_BAD = 'SELECT_BAD',
  SORT_BAD = 'SORT_BAD',
  LOCATION_BAD = 'LOCATION_BAD',

  SWAGGER = 'SWAGGER',

  SERVER = 'SERVER',
  NOT_FOUND = 'NOT_FOUND',
}

export function isClientHttpError(err: any): err is HttpErrorResponse {
  return err instanceof HttpErrorResponse && err.error && (err.status - (err.status % 100)) === 400;
}

export function getCommonErrorMessage(err: HttpErrorResponse) {
  if (err.status === 403) {
    if (err.error && err.error.code === ServerErrorCode.AUTH_ROLE) {
      return 'errors.role';
    }
  }
  return '';
}
